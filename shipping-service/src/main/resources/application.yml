server:
  port: 8083

spring:
  application:
    name: shipping-service
  datasource:
    url: jdbc:postgresql://postgres-shipping:5432/shipping_db
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

#  kafka:
#    consumer:
#      bootstrap-servers: kafka:9092
#      group-id: shipping-service-group
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
#      max-poll-records: 5
#      fetch-max-wait: 500
#      enable-auto-commit: true
#      properties:
#        spring.json.trusted.packages: pl.bielamarcin.shippingservice.dto
#        max.poll.interval.ms: 300000  # 5 minut
#        session.timeout.ms: 30000
#        heartbeat.interval.ms: 10000
  kafka:
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      properties:
        spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
        spring.json.use.type.headers: false
        spring.json.value.default.type: pl.bielamarcin.shippingservice.dto.OrderDTO
    properties:
      spring.json.trusted.packages: "*"

management:
  endpoints:
    web:
      exposure:
        include: "prometheus"
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    root: WARN
    pl.bielamarcin.shippingservice: INFO
    org.apache.kafka: WARN
    org.springframework.kafka: WARN
    org.hibernate: WARN
    pl.bielamarcin.shippingservice.service.OrderEventListener: ERROR